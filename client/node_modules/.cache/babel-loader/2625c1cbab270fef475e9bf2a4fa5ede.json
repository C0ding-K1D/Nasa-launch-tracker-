{"ast":null,"code":"import _asyncToGenerator from\"/Users/matthew/Desktop/nasa-app-ztm/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"/Users/matthew/Desktop/nasa-app-ztm/client/node_modules/@babel/runtime/regenerator/index.js\";var API_URL=\"http://localhost:8000\";function httpGetPlanets(){return _httpGetPlanets.apply(this,arguments);}function _httpGetPlanets(){_httpGetPlanets=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"\".concat(API_URL,\"/planets\"));case 2:response=_context.sent;_context.next=5;return response.json();case 5:data=_context.sent;console.log(data);return _context.abrupt(\"return\",data);case 8:case\"end\":return _context.stop();}}},_callee);}));return _httpGetPlanets.apply(this,arguments);}function httpGetLaunches(){return _httpGetLaunches.apply(this,arguments);}function _httpGetLaunches(){_httpGetLaunches=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:case\"end\":return _context2.stop();}}},_callee2);}));return _httpGetLaunches.apply(this,arguments);}function httpSubmitLaunch(_x){return _httpSubmitLaunch.apply(this,arguments);}function _httpSubmitLaunch(){_httpSubmitLaunch=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(launch){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:case\"end\":return _context3.stop();}}},_callee3);}));return _httpSubmitLaunch.apply(this,arguments);}function httpAbortLaunch(_x2){return _httpAbortLaunch.apply(this,arguments);}function _httpAbortLaunch(){_httpAbortLaunch=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(id){return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:case\"end\":return _context4.stop();}}},_callee4);}));return _httpAbortLaunch.apply(this,arguments);}export{httpGetPlanets,httpGetLaunches,httpSubmitLaunch,httpAbortLaunch};","map":{"version":3,"sources":["/Users/matthew/Desktop/nasa-app-ztm/client/src/hooks/requests.js"],"names":["API_URL","httpGetPlanets","fetch","response","json","data","console","log","httpGetLaunches","httpSubmitLaunch","launch","httpAbortLaunch","id"],"mappings":"mQAAA,GAAMA,CAAAA,OAAO,CAAG,uBAAhB,C,QAEeC,CAAAA,c,oJAAf,2KAGyBC,CAAAA,KAAK,WAAIF,OAAJ,aAH9B,QAGQG,QAHR,qCAIqBA,CAAAA,QAAQ,CAACC,IAAT,EAJrB,QAIQC,IAJR,eAKEC,OAAO,CAACC,GAAR,CAAYF,IAAZ,EALF,gCAMSA,IANT,wD,yDASeG,CAAAA,e,uJAAf,yL,0DAKeC,CAAAA,gB,4JAAf,kBAAgCC,MAAhC,uK,2DAKeC,CAAAA,e,0JAAf,kBAA+BC,EAA/B,uK,kDAKA,OAASX,cAAT,CAAyBO,eAAzB,CAA0CC,gBAA1C,CAA4DE,eAA5D","sourcesContent":["const API_URL = \"http://localhost:8000\";\n\nasync function httpGetPlanets() {\n  // TODO: Once API is ready.\n  // Load planets and return as JSON.\n  const response = await fetch(`${API_URL}/planets`);\n  const data = await response.json();\n  console.log(data);\n  return data;\n}\n\nasync function httpGetLaunches() {\n  // TODO: Once API is ready.\n  // Load launches, sort by flight number, and return as JSON.\n}\n\nasync function httpSubmitLaunch(launch) {\n  // TODO: Once API is ready.\n  // Submit given launch data to launch system.\n}\n\nasync function httpAbortLaunch(id) {\n  // TODO: Once API is ready.\n  // Delete launch with given ID.\n}\n\nexport { httpGetPlanets, httpGetLaunches, httpSubmitLaunch, httpAbortLaunch };\n"]},"metadata":{},"sourceType":"module"}