{"ast":null,"code":"const API_URL = \"http://localhost:8000\";\n\nasync function httpGetPlanets() {\n  // TODO: Once API is ready.\n  // Load planets and return as JSON.\n  const response = await fetch(`${API_URL}/planets`);\n  const fetchedPlanets = await response.json();\n  console.log(fetchedPlanets);\n  return fetchedPlanets;\n}\n\nasync function httpGetLaunches() {\n  const response = await fetch(`${API_URL}/launches`);\n  const fetchedLaunches = await response.json();\n  return fetchedLaunches.sort((a, b) => {\n    return a.flightNumber - b.flightNumber;\n  });\n}\n\nasync function httpSubmitLaunch(launch) {// TODO: Once API is ready.\n  // Submit given launch data to launch system.\n}\n\nasync function httpAbortLaunch(id) {// TODO: Once API is ready.\n  // Delete launch with given ID.\n}\n\nexport { httpGetPlanets, httpGetLaunches, httpSubmitLaunch, httpAbortLaunch };","map":{"version":3,"sources":["/Users/matthew/Desktop/nasa-app-ztm/client/src/hooks/requests.js"],"names":["API_URL","httpGetPlanets","response","fetch","fetchedPlanets","json","console","log","httpGetLaunches","fetchedLaunches","sort","a","b","flightNumber","httpSubmitLaunch","launch","httpAbortLaunch","id"],"mappings":"AAAA,MAAMA,OAAO,GAAG,uBAAhB;;AAEA,eAAeC,cAAf,GAAgC;AAC9B;AACA;AACA,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEH,OAAQ,UAAZ,CAA5B;AACA,QAAMI,cAAc,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAA7B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,cAAZ;AACA,SAAOA,cAAP;AACD;;AAED,eAAeI,eAAf,GAAiC;AAC/B,QAAMN,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEH,OAAQ,WAAZ,CAA5B;AAEA,QAAMS,eAAe,GAAG,MAAMP,QAAQ,CAACG,IAAT,EAA9B;AACA,SAAOI,eAAe,CAACC,IAAhB,CAAqB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACpC,WAAOD,CAAC,CAACE,YAAF,GAAiBD,CAAC,CAACC,YAA1B;AACD,GAFM,CAAP;AAGD;;AAED,eAAeC,gBAAf,CAAgCC,MAAhC,EAAwC,CACtC;AACA;AACD;;AAED,eAAeC,eAAf,CAA+BC,EAA/B,EAAmC,CACjC;AACA;AACD;;AAED,SAAShB,cAAT,EAAyBO,eAAzB,EAA0CM,gBAA1C,EAA4DE,eAA5D","sourcesContent":["const API_URL = \"http://localhost:8000\";\n\nasync function httpGetPlanets() {\n  // TODO: Once API is ready.\n  // Load planets and return as JSON.\n  const response = await fetch(`${API_URL}/planets`);\n  const fetchedPlanets = await response.json();\n  console.log(fetchedPlanets);\n  return fetchedPlanets;\n}\n\nasync function httpGetLaunches() {\n  const response = await fetch(`${API_URL}/launches`);\n\n  const fetchedLaunches = await response.json();\n  return fetchedLaunches.sort((a, b) => {\n    return a.flightNumber - b.flightNumber;\n  });\n}\n\nasync function httpSubmitLaunch(launch) {\n  // TODO: Once API is ready.\n  // Submit given launch data to launch system.\n}\n\nasync function httpAbortLaunch(id) {\n  // TODO: Once API is ready.\n  // Delete launch with given ID.\n}\n\nexport { httpGetPlanets, httpGetLaunches, httpSubmitLaunch, httpAbortLaunch };\n"]},"metadata":{},"sourceType":"module"}